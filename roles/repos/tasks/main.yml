- name: Configure repositories from plugin list
  loop: "{{ repos }}"
  loop_control:
    loop_var: repo_item
  block:

    - name: "Method: Uncomment repo block for [{{ repo_item.name }}]"
      when: repo_item.method == 'uncomment' and repo_item.state == 'present'
      ansible.builtin.replace:
        path: /etc/pacman.conf
        regexp: '(?s)^#\s*(\[{{ repo_item.name }}\]\s*\n#\s*Include\s*=\s*/etc/pacman.d/mirrorlist)'
        replace: '\1'
      become: true

    - name: "Method: Install repo via custom command for [{{ repo_item.name }}]"
      when: repo_item.method == 'script' and repo_item.state == 'present'
      become: true
      block:
        - name: "Check if repo [{{ repo_item.name }}] is already configured"
          ansible.builtin.command: "grep -q '[{{ repo_item.name }}]' /etc/pacman.conf"
          register: repo_exists
          failed_when: false
          changed_when: false

        - name: "Run custom setup command"
          ansible.builtin.shell: "{{ repo_item.command }}"
          when: repo_exists.rc != 0
          changed_when: true

    - name: "Method: Add repo with declarative key for [{{ repo_item.name }}]"
      when: repo_item.method == 'key' and repo_item.state == 'present'
      become: true
      block:
        - name: "Receive GPG key {{ repo_item.key_id }}"
          ansible.builtin.command:
            cmd: "pacman-key --recv-keys {{ repo_item.key_id }} --keyserver {{ repo_item.keyserver | default('hkps://keyserver.ubuntu.com') }}"
          changed_when: false

        - name: "Locally sign the GPG key {{ repo_item.key_id }}"
          ansible.builtin.command:
            cmd: "pacman-key --lsign-key {{ repo_item.key_id }}"
          changed_when: false

        - name: "Ensure repository block is in pacman.conf"
          ansible.builtin.blockinfile:
            path: /etc/pacman.conf
            block: "{{ repo_item.config_block }}"
            marker: "# {mark} ANSIBLE MANAGED BLOCK {{ repo_item.name }}"
            state: present

- name: Ensure pacman cache is up to date
  ansible.builtin.command:
    cmd: pacman -Sy
  changed_when: false
  become: true
