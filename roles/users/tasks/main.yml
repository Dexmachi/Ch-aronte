- name: Define Hostname
  ansible.builtin.hostname:
    name: "{{ hostname }}"

- name: Load user secrets from file
  ansible.builtin.include_vars:
    file: "{{ secrets.sec_file }}"
    name: user_secrets
  when:
    - secrets is defined
    - secrets.sec_mode is defined
    - secrets.sec_mode == "charonte"
    - secrets.sec_file is defined and secrets.sec_file != ""

- name: Get current list of users in the system
  ansible.builtin.getent:
    database: passwd
  register: current_users

- name: Initialize system_users list
  ansible.builtin.set_fact:
    system_users: []

- name: Filter system users
  ansible.builtin.set_fact:
    system_users: "{{ system_users + [item.key] }}"
  loop: "{{ current_users.ansible_facts.getent_passwd | dict2items }}"
  when: "item.value[1] | int < 1000 and item.value[1] | int > 0 and item.value[1] | int != 65534"

- name: Determine users to remove
  ansible.builtin.set_fact:
    users_to_remove: "{{ (current_users.ansible_facts.getent_passwd.keys() | list) | difference(final_users | map(attribute='name') | list) | difference(system_users) | difference(['nobody']) }}"
  when: final_users is defined

- name: Remove users not in final_users
  ansible.builtin.user:
    name: "{{ item }}"
    state: absent
    remove: true
  loop: "{{ users_to_remove }}"
  when:
    - final_users is defined
    - users_to_remove is defined
    - users_to_remove | length > 0

- name: Make sure final_users exist
  ansible.builtin.user:
    name: "{{ item.name }}"
    shell: "/bin/{{ item.shell }}"
    groups: "{{ item.groups | join(',') }}"
    append: true
    create_home: true
    password: "{{ user_secrets[item.name].password | default(omit) if user_secrets is defined and user_secrets[item.name] is defined else omit }}"
  loop: "{{ final_users }}"

- name: Manage sudoers
  become: true
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    regexp: "{{ '^#\\s*%wheel ALL=\\(ALL:ALL\\) ALL' if wheel_access | bool else '^%wheel ALL=\\(ALL:ALL\\) ALL' }}"
    line: "{{ '%wheel ALL=(ALL:ALL) ALL' if wheel_access | bool else '#%wheel ALL=(ALL:ALL) ALL' }}"
    validate: '/usr/sbin/visudo -cf %s'
