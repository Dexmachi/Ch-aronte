# --- GRUB Configuration ---
- name: Install GRUB for BIOS
  ansible.builtin.command:
    cmd: "grub-install --target=i386-pc /dev/{{ disco }}"
  args:
    creates: /boot/grub/grub.cfg
  when:
    - bootloader is defined and bootloader == 'grub'
    - firmware == 'BIOS'

- name: Install GRUB for UEFI
  ansible.builtin.command:
    cmd: "grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB"
  args:
    creates: /boot/grub/grub.cfg
  when:
    - bootloader is defined and bootloader == 'grub'
    - firmware == 'UEFI'

- name: Generate GRUB config
  ansible.builtin.command:
    cmd: "grub-mkconfig -o /boot/grub/grub.cfg"
  when: bootloader is defined and bootloader == 'grub'
  changed_when: false

# --- rEFInd Configuration ---
- name: Install rEFInd (UEFI)
  ansible.builtin.command:
    cmd: "refind-install"
  args:
    creates: /boot/efi/refind/refind.conf
  when:
    - bootloader is defined and bootloader == 'refind'
    - firmware == 'UEFI'

- name: Create rEFInd config entry
  ansible.builtin.blockinfile:
    path: /boot/efi/refind/refind.conf
    block: |
      menuentry "{{ hostname }}" {
          icon /EFI/refind/icons/os_arch.png
          volume "{{ particoes.root.label }}"
          loader /vmlinuz-linux
          initrd /initramfs-linux.img
          options "root=LABEL={{ particoes.root.label }} rw add_efi_memmap"
          submenuentry "Fallback" {
              initrd /initramfs-linux-fallback.img
          }
          submenuentry "Boot to Terminal" {
              add_options "systemd.unit=multi-user.target"
          }
      }
    marker: "# {mark} ANSIBLE MANAGED BLOCK FOR {{ hostname }}"
  when:
    - bootloader is defined and bootloader == 'refind'
    - firmware == 'UEFI'
