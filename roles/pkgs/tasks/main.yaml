- name: Set base bootloader
  ansible.builtin.set_fact:
    pkgs_pacotes_firmware_especificos: "{{ ['efibootmgr', 'refind'] if firmware == 'UEFI' else ['grub'] }}"

- name: Unite base pkgs and firmware pkgs
  ansible.builtin.set_fact:
    pkgs_pacotes_base: "{{ necessarios | union(pkgs_pacotes_firmware_especificos) }}"

- name: (Debug) Show base pkg list
  ansible.builtin.debug:
    msg: "Firmware detected: {{ firmware }}. base pkg list: {{ pkgs_pacotes_base }}"
  vars:
    firmware: "{{ lookup('env', 'FIRMWARE') }}"

- name: Pkgs list exists
  ansible.builtin.set_fact:
    pkgs_pacotes_desejados: "{{ pacotes | default([]) }}"

- name: Unite base pkg and desired pkgs
  ansible.builtin.set_fact:
    pkgs_pacotes_finais: "{{ pkgs_pacotes_base | union(pkgs_pacotes_desejados) }}"

- name: Get true pkg list
  ansible.builtin.command:
    cmd: pacman -Qqe
  register: pkgs_pacotes_instalados_raw
  changed_when: false
  check_mode: false

- name: Get removal pkgs
  ansible.builtin.set_fact:
    pkgs_pacotes_a_remover: "{{ pkgs_pacotes_instalados_raw.stdout_lines | difference(pkgs_pacotes_finais) }}"

- name: (Debug) Show removal pkgs
  ansible.builtin.debug:
    var: pkgs_pacotes_a_remover
  when: pkgs_pacotes_a_remover | length > 0

- name: Remove removal pkgs
  community.general.pacman:
    name: "{{ pkgs_pacotes_a_remover }}"
    state: absent
  become: true
  when: pkgs_pacotes_a_remover | length > 0

- name: Install wanted pkgs
  community.general.pacman:
    name: "{{ pkgs_pacotes_desejados }}"
    state: present
  become: true
  when: pkgs_pacotes_desejados | length > 0
