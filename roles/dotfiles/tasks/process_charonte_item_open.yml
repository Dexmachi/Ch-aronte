# This task file is called from process_charonte_item.yml for each file inside an 'open: true' dotfile source directory.
# It expects 'sub_item' (from the loop) and 'item' (from the parent context) to be defined.

- name: "Set target path for {{ sub_item.path | basename }}"
  set_fact:
    target_path: "/home/{{ users[0].name }}/{{ item.path | default('.') }}/{{ sub_item.path | basename }}"

- name: "Check status of target path for content symlink"
  ansible.builtin.stat:
    path: "{{ target_path }}"
  become: true
  become_user: "{{ users[0].name }}"
  register: target_path_stat

- name: "Backup existing file/dir before creating content symlink"
  ansible.builtin.command:
    cmd: "mv {{ target_path }} {{ target_path }}.bak_{{ ansible_date_time.epoch }}"
  when:
    - target_path_stat.stat.exists
    # This is an weird af flag IK, it means "when either the target path isn't an symlink OR the lnk_target isnt the same as the sub_item path"
    # (sub_item.path is the same as to say "symlink to the specific file inside your dotfiles folder")
    - not (target_path_stat.stat.islnk and target_path_stat.stat.lnk_target == sub_item.path)
  changed_when: true
  become: true
  become_user: "{{ users[0].name }}"

- name: "Create content symlink for {{ sub_item.path | basename }}"
  ansible.builtin.file:
    src: "{{ sub_item.path }}"
    path: "{{ target_path }}"
    state: link
    force: true
  become: true
  become_user: "{{ users[0].name }}"

- name: "Collect managed file path for open:true item"
  set_fact:
    open_true_managed_files: "{{ open_true_managed_files + [target_path] }}"
