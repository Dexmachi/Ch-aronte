- name: Load vars
  include_vars: "{{ item }}"
  loop:
    - "{{ plugin }}"
    - "{{ secrets }}"

- name: Define Hostname
  ansible.builtin.hostname:
    name: "{{ hostname }}"

- name: Make sure users exist
  loop: "{{ users }}"
  loop_control:
    loop_var: user_item
  block:
  - name: "user_item '{{ user_item.name }}' exists"
    ansible.builtin.user:
      name: "{{ user_item.name }}"
      shell: "{{ user_item.shell }}"
      groups: "{{ user_item.groups | join(',') }}"
      append: yes
      create_home: yes
      password: "{{ user_secrets[user_item.name].password | default(omit) }}"

- name: Manage sudoers
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    regexp: "{{ '^#\\s*%wheel ALL=\\(ALL:ALL\\) ALL' if wheel_access | bool else '^%wheel ALL=\\(ALL:ALL\\) ALL' }}"
    line: "{{ '%wheel ALL=(ALL:ALL) ALL' if wheel_access | bool else '#%wheel ALL=(ALL:ALL) ALL' }}"
    validate: '/usr/sbin/visudo -cf %s'

- name: Check if Ch-aronte destination folder already exists
  ansible.builtin.stat:
    path: "/home/{{ users[0].name }}/Ch-aronte"
  register: charonte_dest_stat
  when: users is defined and users | length > 0

- name: "Copy Ch-aronte to first user's home directory"
  ansible.builtin.copy:
    src: "/root/Ch-aronte" # Assumindo que o playbook roda de dentro do chroot
    dest: "/home/{{ users[0].name }}/Ch-aronte"
    owner: "{{ users[0].name }}"
    group: "{{ users[0].name }}"
    mode: '0755'
  when: 
    - users is defined and users | length > 0
    - not charonte_dest_stat.stat.exists
